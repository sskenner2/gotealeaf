# interactive command line blackjack

# calc the int value total of player and dealer cards
def calculate_total(card)
#   total = ''
# 	total = card[1][2] + card[2][2]
end

puts "ruby blackjack"

# def card suit and number arrays
suits = ['D', 'S', 'H', 'C']
cards = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']

# cartesian product of suits and cards arrays to get deck
deck = suits.product(cards)

# shuffle and change the deck array
deck.shuffle!

# deal cards

# ?? initialize(correct wording?) player and dealer cards arrays
player_cards = []
dealer_cards = []

# pop ending values from deck then add to players arrays
player_cards << deck.pop
dealer_cards << deck.pop
player_cards << deck.pop
dealer_cards << deck.pop

# calc the face value of cards and store in x_total variable
# player_total = player_cards[1][2] + player_cards[2][2]
# dealer_total = dealer_cards[1][2] + dealer_cards[2][2]
player_total = calculate_total(player_cards)
dealer_total = calculate_total(dealer_cards)

# display cards and totals ..
puts "players cards: #{player_cards}"
puts "players total: #{player_total}"
puts "dealer_cards: #{dealer_cards}"
puts "dealer_total: #{dealer_total}"
